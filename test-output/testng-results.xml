<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Printing Configs]]>
    </line>
    <line>
      <![CDATA[appdir:resources]]>
    </line>
    <line>
      <![CDATA[appname:Keanu-0.0.4.5-primary-universal-debug (11).apk]]>
    </line>
    <line>
      <![CDATA[OSName:android]]>
    </line>
    <line>
      <![CDATA[deviceId1:emulator-5554]]>
    </line>
    <line>
      <![CDATA[deviceId2:null]]>
    </line>
    <line>
      <![CDATA[appActivity:info.guardianproject.keanuapp.MainActivity]]>
    </line>
    <line>
      <![CDATA[appPackage:info.guardianproject.keanuapp]]>
    </line>
    <line>
      <![CDATA[isBrowserStackExecution:false]]>
    </line>
    <line>
      <![CDATA[osVersion1:10.0]]>
    </line>
    <line>
      <![CDATA[osVersion2:null]]>
    </line>
    <line>
      <![CDATA[deviceName1:Google Pixel]]>
    </line>
    <line>
      <![CDATA[deviceName2:null]]>
    </line>
    <line>
      <![CDATA[keanuServer:neo.keanu.im]]>
    </line>
    <line>
      <![CDATA[user1:testuser08]]>
    </line>
    <line>
      <![CDATA[user1Pass:pass123456]]>
    </line>
    <line>
      <![CDATA[user2:testuser09]]>
    </line>
    <line>
      <![CDATA[user2Pass:pass123456]]>
    </line>
    <line>
      <![CDATA[user3:]]>
    </line>
    <line>
      <![CDATA[appUrl:null]]>
    </line>
    <line>
      <![CDATA[<h1><Center><Font face="arial" color="Orange">Log Summary</font></Center><h1><table border="1" bgcolor="lightgray">]]>
    </line>
    <line>
      <![CDATA[Finding element with logic: xpath://android.widget.TextView[contains(@text,'Skip')]]]>
    </line>
    <line>
      <![CDATA[Finding element with logic: id:btnShowLogin]]>
    </line>
    <line>
      <![CDATA[Finding element with logic: xpath://android.widget.TextView[@text='You can use an existing account on any server you would like.']]]>
    </line>
    <line>
      <![CDATA[Finding element with logic: xpath://android.widget.EditText[contains(@resource-id,'edtName')]]]>
    </line>
    <line>
      <![CDATA[Finding element with logic: xpath://android.widget.EditText[contains(@resource-id,'edtName')]]]>
    </line>
    <line>
      <![CDATA[Finding element with logic: xpath://android.widget.EditText[contains(@resource-id,'edtPass')]]]>
    </line>
    <line>
      <![CDATA[Finding element with logic: xpath://android.widget.EditText[contains(@resource-id,'edtPass')]]]>
    </line>
    <line>
      <![CDATA[Finding element with logic: xpath://android.widget.EditText[contains(@resource-id,'edtServer')]]]>
    </line>
    <line>
      <![CDATA[Finding element with logic: xpath://android.widget.EditText[contains(@resource-id,'edtServer')]]]>
    </line>
    <line>
      <![CDATA[Finding element with logic: xpath://android.widget.Button[contains(@resource-id,'btnSignIn')]]]>
    </line>
    <line>
      <![CDATA[Finding element with logic: xpath://androidx.appcompat.app.ActionBar.Tab[@content-desc="Discover"]/android.widget.ImageView]]>
    </line>
    <line>
      <![CDATA[Finding element with logic: xpath://android.widget.TextView[@text='Keanu | Discover']]]>
    </line>
    <line>
      <![CDATA[Finding element with logic: id:info.guardianproject.keanuapp:id/menu_search]]>
    </line>
    <line>
      <![CDATA[Finding element with logic: id:info.guardianproject.keanuapp:id/menu_sort]]>
    </line>
    <line>
      <![CDATA[Finding element with logic: xpath://android.widget.ImageView[@content-desc='More options']]]>
    </line>
    <line>
      <![CDATA[Finding element with logic: xpath://androidx.appcompat.app.ActionBar.Tab[@content-desc='Chats']]]>
    </line>
    <line>
      <![CDATA[Finding element with logic: xpath://android.widget.TextView[@text='Keanu | Chats']]]>
    </line>
    <line>
      <![CDATA[Finding element with logic: id:info.guardianproject.keanuapp:id/menu_search]]>
    </line>
    <line>
      <![CDATA[Finding element with logic: id:info.guardianproject.keanuapp:id/menu_sort]]>
    </line>
    <line>
      <![CDATA[Finding element with logic: xpath://android.widget.ImageView[@content-desc='More options']]]>
    </line>
    <line>
      <![CDATA[Finding element with logic: id:fab]]>
    </line>
    <line>
      <![CDATA[Finding element with logic: id:email]]>
    </line>
    <line>
      <![CDATA[Finding element with logic: denil]]>
    </line>
    <line>
      <![CDATA[screenshot createChatRoom_android_4403793.png available at :screenshots/createChatRoom_android_4403793.png]]>
    </line>
    <line>
      <![CDATA[Failed fetching URL and screenshot due to error:Method has not yet been implemented
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-V9K624K', ip: '192.168.43.117', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14'
Driver info: io.appium.java_client.AppiumDriver
Capabilities {app: D:\ls\keanu-appium-testing\..., appActivity: info.guardianproject.keanua..., appPackage: info.guardianproject.keanuapp, autoGrantPermissions: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: D:\ls\keanu-appium-testing\..., appActivity: info.guardianproject.keanua..., appPackage: info.guardianproject.keanuapp, autoGrantPermissions: true, automationName: UiAutomator2, device: Google Pixel, newCommandTimeout: 90000, noResetValue: false, platformName: android, resetKeyboard: true, udid: emulator-5554, unicodeKeyboard: true}, device: Google Pixel, deviceApiLevel: 29, deviceManufacturer: Google, deviceModel: Android SDK built for x86, deviceName: emulator-5554, deviceScreenDensity: 400, deviceScreenSize: 1080x2160, deviceUDID: emulator-5554, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 90000, noResetValue: false, pixelRatio: 2.5, platform: LINUX, platformName: LINUX, platformVersion: 10, resetKeyboard: true, statBarHeight: 60, takesScreenshot: true, udid: emulator-5554, unicodeKeyboard: true, viewportRect: {height: 1980, left: 0, top: 60, width: 1080}, warnings: {}, webStorageEnabled: false}
Session ID: 91664f41-49a5-4832-9f4c-2f4c747bdaf0]]>
    </line>
    <line>
      <![CDATA[Closing the Browser Successfully]]>
    </line>
  </reporter-output>
  <suite started-at="2020-07-27T13:08:24Z" name="Default suite" finished-at="2020-07-27T13:09:33Z" duration-ms="68993">
    <groups>
    </groups>
    <test started-at="2020-07-27T13:08:24Z" name="Default test" finished-at="2020-07-27T13:09:33Z" duration-ms="68993">
      <class name="keanu.Tests.CreateStoryTest">
        <test-method is-config="true" signature="aaasetUp(org.testng.ITestContext)[pri:0, instance:keanu.Tests.CreateStoryTest@3c87521]" started-at="2020-07-27T18:38:24Z" name="aaasetUp" finished-at="2020-07-27T18:38:24Z" duration-ms="90" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@77307458]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aaasetUp -->
        <test-method is-config="true" signature="setup()[pri:0, instance:keanu.Tests.CreateStoryTest@3c87521]" started-at="2020-07-27T18:38:24Z" name="setup" finished-at="2020-07-27T18:38:58Z" duration-ms="33609" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Printing Configs]]>
            </line>
            <line>
              <![CDATA[appdir:resources]]>
            </line>
            <line>
              <![CDATA[appname:Keanu-0.0.4.5-primary-universal-debug (11).apk]]>
            </line>
            <line>
              <![CDATA[OSName:android]]>
            </line>
            <line>
              <![CDATA[deviceId1:emulator-5554]]>
            </line>
            <line>
              <![CDATA[deviceId2:null]]>
            </line>
            <line>
              <![CDATA[appActivity:info.guardianproject.keanuapp.MainActivity]]>
            </line>
            <line>
              <![CDATA[appPackage:info.guardianproject.keanuapp]]>
            </line>
            <line>
              <![CDATA[isBrowserStackExecution:false]]>
            </line>
            <line>
              <![CDATA[osVersion1:10.0]]>
            </line>
            <line>
              <![CDATA[osVersion2:null]]>
            </line>
            <line>
              <![CDATA[deviceName1:Google Pixel]]>
            </line>
            <line>
              <![CDATA[deviceName2:null]]>
            </line>
            <line>
              <![CDATA[keanuServer:neo.keanu.im]]>
            </line>
            <line>
              <![CDATA[user1:testuser08]]>
            </line>
            <line>
              <![CDATA[user1Pass:pass123456]]>
            </line>
            <line>
              <![CDATA[user2:testuser09]]>
            </line>
            <line>
              <![CDATA[user2Pass:pass123456]]>
            </line>
            <line>
              <![CDATA[user3:]]>
            </line>
            <line>
              <![CDATA[appUrl:null]]>
            </line>
            <line>
              <![CDATA[<h1><Center><Font face="arial" color="Orange">Log Summary</font></Center><h1><table border="1" bgcolor="lightgray">]]>
            </line>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="login()[pri:0, instance:keanu.Tests.CreateStoryTest@3c87521]" started-at="2020-07-27T18:38:58Z" name="login" finished-at="2020-07-27T18:39:24Z" duration-ms="25696" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Finding element with logic: xpath://android.widget.TextView[contains(@text,'Skip')]]]>
            </line>
            <line>
              <![CDATA[Finding element with logic: id:btnShowLogin]]>
            </line>
            <line>
              <![CDATA[Finding element with logic: xpath://android.widget.TextView[@text='You can use an existing account on any server you would like.']]]>
            </line>
            <line>
              <![CDATA[Finding element with logic: xpath://android.widget.EditText[contains(@resource-id,'edtName')]]]>
            </line>
            <line>
              <![CDATA[Finding element with logic: xpath://android.widget.EditText[contains(@resource-id,'edtName')]]]>
            </line>
            <line>
              <![CDATA[Finding element with logic: xpath://android.widget.EditText[contains(@resource-id,'edtPass')]]]>
            </line>
            <line>
              <![CDATA[Finding element with logic: xpath://android.widget.EditText[contains(@resource-id,'edtPass')]]]>
            </line>
            <line>
              <![CDATA[Finding element with logic: xpath://android.widget.EditText[contains(@resource-id,'edtServer')]]]>
            </line>
            <line>
              <![CDATA[Finding element with logic: xpath://android.widget.EditText[contains(@resource-id,'edtServer')]]]>
            </line>
            <line>
              <![CDATA[Finding element with logic: xpath://android.widget.Button[contains(@resource-id,'btnSignIn')]]]>
            </line>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="checkAlerts(org.testng.ITestResult)[pri:0, instance:keanu.Tests.CreateStoryTest@3c87521]" started-at="2020-07-27T18:39:24Z" name="checkAlerts" finished-at="2020-07-27T18:39:24Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=CreateStoryTest.login()[pri:0, instance:keanu.Tests.CreateStoryTest@3c87521] output=Finding element with logic: xpath://android.widget.TextView[contains(@text,'Skip')]]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAlerts -->
        <test-method is-config="true" signature="handelErrorPopup()[pri:0, instance:keanu.Tests.CreateStoryTest@3c87521]" started-at="2020-07-27T18:39:24Z" name="handelErrorPopup" finished-at="2020-07-27T18:39:24Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- handelErrorPopup -->
        <test-method signature="createChatRoom()[pri:0, instance:keanu.Tests.CreateStoryTest@3c87521]" started-at="2020-07-27T18:39:24Z" name="createChatRoom" finished-at="2020-07-27T18:39:30Z" duration-ms="6043" status="FAIL">
          <exception class="java.lang.ArrayIndexOutOfBoundsException">
            <message>
              <![CDATA[Index 1 out of bounds for length 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArrayIndexOutOfBoundsException: Index 1 out of bounds for length 1
	at keanu.Library.AppLibrary.getBy(AppLibrary.java:402)
	at keanu.Library.AppLibrary.findElementForMobile(AppLibrary.java:285)
	at keanu.Library.AppLibrary.enterMobileText(AppLibrary.java:367)
	at keanu.PageObject.ChatScreen.createChatGroup(ChatScreen.java:366)
	at keanu.Tests.CreateStoryTest.createChatRoom(CreateStoryTest.java:90)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArrayIndexOutOfBoundsException -->
          <reporter-output>
            <line>
              <![CDATA[Finding element with logic: xpath://androidx.appcompat.app.ActionBar.Tab[@content-desc="Discover"]/android.widget.ImageView]]>
            </line>
            <line>
              <![CDATA[Finding element with logic: xpath://android.widget.TextView[@text='Keanu | Discover']]]>
            </line>
            <line>
              <![CDATA[Finding element with logic: id:info.guardianproject.keanuapp:id/menu_search]]>
            </line>
            <line>
              <![CDATA[Finding element with logic: id:info.guardianproject.keanuapp:id/menu_sort]]>
            </line>
            <line>
              <![CDATA[Finding element with logic: xpath://android.widget.ImageView[@content-desc='More options']]]>
            </line>
            <line>
              <![CDATA[Finding element with logic: xpath://androidx.appcompat.app.ActionBar.Tab[@content-desc='Chats']]]>
            </line>
            <line>
              <![CDATA[Finding element with logic: xpath://android.widget.TextView[@text='Keanu | Chats']]]>
            </line>
            <line>
              <![CDATA[Finding element with logic: id:info.guardianproject.keanuapp:id/menu_search]]>
            </line>
            <line>
              <![CDATA[Finding element with logic: id:info.guardianproject.keanuapp:id/menu_sort]]>
            </line>
            <line>
              <![CDATA[Finding element with logic: xpath://android.widget.ImageView[@content-desc='More options']]]>
            </line>
            <line>
              <![CDATA[Finding element with logic: id:fab]]>
            </line>
            <line>
              <![CDATA[Finding element with logic: id:email]]>
            </line>
            <line>
              <![CDATA[Finding element with logic: denil]]>
            </line>
          </reporter-output>
        </test-method> <!-- createChatRoom -->
        <test-method is-config="true" signature="checkAlerts(org.testng.ITestResult)[pri:0, instance:keanu.Tests.CreateStoryTest@3c87521]" started-at="2020-07-27T18:39:30Z" name="checkAlerts" finished-at="2020-07-27T18:39:31Z" duration-ms="1018" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=createChatRoom status=FAILURE method=CreateStoryTest.createChatRoom()[pri:0, instance:keanu.Tests.CreateStoryTest@3c87521] output=Finding element with logic: xpath://androidx.appcompat.app.ActionBar.Tab[@content-desc="Discover"]/android.widget.ImageView]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[screenshot createChatRoom_android_4403793.png available at :screenshots/createChatRoom_android_4403793.png]]>
            </line>
            <line>
              <![CDATA[Failed fetching URL and screenshot due to error:Method has not yet been implemented
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-V9K624K', ip: '192.168.43.117', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14'
Driver info: io.appium.java_client.AppiumDriver
Capabilities {app: D:\ls\keanu-appium-testing\..., appActivity: info.guardianproject.keanua..., appPackage: info.guardianproject.keanuapp, autoGrantPermissions: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: D:\ls\keanu-appium-testing\..., appActivity: info.guardianproject.keanua..., appPackage: info.guardianproject.keanuapp, autoGrantPermissions: true, automationName: UiAutomator2, device: Google Pixel, newCommandTimeout: 90000, noResetValue: false, platformName: android, resetKeyboard: true, udid: emulator-5554, unicodeKeyboard: true}, device: Google Pixel, deviceApiLevel: 29, deviceManufacturer: Google, deviceModel: Android SDK built for x86, deviceName: emulator-5554, deviceScreenDensity: 400, deviceScreenSize: 1080x2160, deviceUDID: emulator-5554, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 90000, noResetValue: false, pixelRatio: 2.5, platform: LINUX, platformName: LINUX, platformVersion: 10, resetKeyboard: true, statBarHeight: 60, takesScreenshot: true, udid: emulator-5554, unicodeKeyboard: true, viewportRect: {height: 1980, left: 0, top: 60, width: 1080}, warnings: {}, webStorageEnabled: false}
Session ID: 91664f41-49a5-4832-9f4c-2f4c747bdaf0]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkAlerts -->
        <test-method is-config="true" signature="handelErrorPopup()[pri:0, instance:keanu.Tests.CreateStoryTest@3c87521]" started-at="2020-07-27T18:39:31Z" name="handelErrorPopup" finished-at="2020-07-27T18:39:31Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- handelErrorPopup -->
        <test-method is-config="true" signature="quitSession()[pri:0, instance:keanu.Tests.CreateStoryTest@3c87521]" started-at="2020-07-27T18:39:31Z" name="quitSession" finished-at="2020-07-27T18:39:33Z" duration-ms="2499" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Closing the Browser Successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- quitSession -->
      </class> <!-- keanu.Tests.CreateStoryTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
